<% params_name =  "#{@name.underscore}_params" -%>
<% hash_name   =  "#{@name.underscore}_hash" -%>
<% create_model_method  =  "create_#{@name.underscore}" -%>
require "./spec_helper"

def <%= hash_name %>
  <%= @fields_hash.to_s %>
end

def <%= params_name %>
  params = [] of String
  <%- @fields_hash.keys.map do |k| -%>
  params << "<%= k %>=#{<%= hash_name %>["<%= k %>"]}"
  <%- end -%>
  params.join("&")
end

def <%= create_model_method %>
  model = <%= class_name %>.new(<%= hash_name %>)
  model.save
  model
end

class <%= class_name %>ControllerTest < GarnetSpec::Controller::Test
  getter handler : Amber::Pipe::Pipeline

  def initialize
    @handler = Amber::Pipe::Pipeline.new
    @handler.build :web do
      plug Amber::Pipe::Error.new
      plug Amber::Pipe::Session.new
      plug Amber::Pipe::Flash.new
    end
    @handler.prepare_pipelines
  end
end

describe <%= class_name %>ControllerTest do
  subject = <%= class_name %>ControllerTest.new

  it "renders <%= @name %> index template" do
    <%= class_name %>.clear
    response = subject.get "/<%= Inflector.pluralize(@name) %>"

    response.status_code.should eq(200)
    response.body.should contain("<%= display_name %>s")
  end

  it "renders <%= @name %> show template" do
    <%= class_name %>.clear
    model = create_<%= @name.downcase %>
    location = "/<%= Inflector.pluralize(@name) %>/#{model.id}"

    response = subject.get location

    response.status_code.should eq(200)
    response.body.should contain("Show <%= display_name %>")
  end

  it "renders <%= @name %> new template" do
    <%= class_name %>.clear
    location = "/<%= Inflector.pluralize(@name) %>/new"

    response = subject.get location

    response.status_code.should eq(200)
    response.body.should contain("New <%= display_name %>")
  end

  it "renders <%= @name %> edit template" do
    <%= class_name %>.clear
    model = <%= create_model_method %>
    location = "/<%= Inflector.pluralize(@name) %>/#{model.id}/edit"

    response = subject.get location

    response.status_code.should eq(200)
    response.body.should contain("Edit <%= display_name %>")
  end

  it "creates a <%= @name %>" do
    <%= class_name %>.clear
    response = subject.post "/<%= Inflector.pluralize(@name) %>", body: <%= params_name %>

    response.headers["Location"].should eq "/<%= Inflector.pluralize(@name) %>"
    response.status_code.should eq(302)
    response.body.should eq "302"
  end

  it "updates a <%= @name %>" do
    <%= class_name %>.clear
    model = <%= create_model_method %>
    response = subject.patch "/<%= Inflector.pluralize(@name) %>/#{model.id}", body: <%= params_name %>

    response.headers["Location"].should eq "/<%= Inflector.pluralize(@name) %>"
    response.status_code.should eq(302)
    response.body.should eq "302"
  end

  it "deletes a <%= @name %>" do
    <%= class_name %>.clear
    model = <%= create_model_method %>
    response = subject.delete "/<%= Inflector.pluralize(@name) %>/#{model.id}"

    response.headers["Location"].should eq "/<%= Inflector.pluralize(@name) %>"
    response.status_code.should eq(302)
    response.body.should eq "302"
  end
end
